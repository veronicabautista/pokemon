{"version":3,"sources":["components/Header.js","components/Filter.js","components/PokemonCard.js","components/PokemonList.js","components/Footer.js","App.js","serviceWorker.js","index.js","images/logo.png"],"names":["Header","react_default","a","createElement","className","src","logo","alt","Component","Filter","type","placeholder","name","this","props","onChange","searchPokemon","React","PokemonCard","newPokemon","detail","sprites","front_default","id","types","map","attack","PokemonList","_this","pokemons","sort","b","filter","search","toLocaleLowerCase","includes","pokemonName","card","key","components_PokemonCard","Footer","href","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","_this2","pokedex","i","fetch","then","response","json","info","push","setState","concat","console","log","event","myPoke","currentTarget","value","components_Header","components_Filter","components_PokemonList","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.11eba971.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from \"../images/logo.png\";\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pokedex__tittle\">\r\n                <img className=\"title\" src={logo} alt=\"logo\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nclass Filter extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"pokedex__input\">\r\n        <input className=\"pokedex__searchbox\" type=\"text\" placeholder=\"Filtra pokemons por nombre...\" name={this.props.name} onChange={this.props.searchPokemon} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;","import React from \"react\";\r\n\r\nclass PokemonCard extends React.Component {\r\n  render() {\r\n\r\n    const newPokemon = this.props.detail;\r\n\r\n    return (\r\n      <div className=\"pokemon__card\">\r\n        <div className=\"pokemon__image\">\r\n          <img className=\"pokemon__picture\" src={newPokemon.sprites.front_default} alt=\"pokemon\" />\r\n          <span className=\"pokemon__id--container\">\r\n            <p className=\"pokemon__id\">id / {newPokemon.id}</p>\r\n          </span>\r\n        </div>\r\n        <div className=\"pokemon__info\">\r\n          <p className=\"pokemon__name\">{newPokemon.name}</p>\r\n          <ul className=\"pokemon__attack--type\">{newPokemon.types.map(attack => {\r\n            return <li className=\"pokemon__attack\">{attack.type.name}</li>\r\n          })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonCard;","import React from \"react\";\r\nimport PokemonCard from \"./PokemonCard\";\r\n\r\nclass PokemonList extends React.Component {\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"pokedex__container\">\r\n\t\t\t\t<ul className=\"pokemonlist\">\r\n\t\t\t\t\t{this.props.pokemons\r\n\t\t\t\t\t\t.sort((a, b) => a.id - b.id)\r\n\t\t\t\t\t\t.filter(search => {\r\n\t\t\t\t\t\t\treturn search.name.toLocaleLowerCase().includes(this.props.pokemonName.toLocaleLowerCase());\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.map((card => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li className=\"pokemonlist__card\" key={card.id}>\r\n\t\t\t\t\t\t\t\t\t<PokemonCard detail={card} />\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PokemonList;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"pokedex__footer\">\r\n        <span>\r\n          <p>Made with <a href=\"https://pokeapi.co/\">PokeApi</a>.\r\n          Pokémon and Pokémon character names are trademarks of Nintendo.</p>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Filter from './components/Filter';\r\nimport PokemonList from './components/PokemonList';\r\nimport Footer from './components/Footer';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pokemons: [],\r\n      pokemonName: \"\",\r\n    }\r\n\r\n  this.searchPokemon = this.searchPokemon.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n    const pokedex = [];\r\n    for (let i = 1; i < 26; i++) {\r\n      fetch('https://pokeapi.co/api/v2/pokemon/' + i + '/')\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(info => {\r\n          pokedex.push(info)\r\n          this.setState({ pokemons: [...pokedex ] });\r\n          console.log(this.state.pokemons);\r\n        })\r\n    }\r\n  }\r\n\r\n  searchPokemon(event) {\r\n    const myPoke = event.currentTarget.value;\r\n    this.setState({\r\n      pokemonName: myPoke\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pokedex__main\">\r\n        <Header />\r\n        <Filter\r\n            searchPokemon={this.searchPokemon} \r\n            pokemons={this.state.pokemons}\r\n            pokemonName={this.state.pokemonName} />\r\n        <PokemonList \r\n            pokemons={this.state.pokemons}\r\n            pokemonName={this.state.pokemonName} />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.799db9c7.png\";"],"sourceRoot":""}